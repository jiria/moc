// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moc_cloudagent_etcdserver.proto

package cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "github.com/microsoft/moc/rpc/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EtcdServerRequest struct {
	EtcdServers          []*EtcdServer    `protobuf:"bytes,1,rep,name=EtcdServers,proto3" json:"EtcdServers,omitempty"`
	OperationType        common.Operation `protobuf:"varint,2,opt,name=OperationType,proto3,enum=moc.Operation" json:"OperationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EtcdServerRequest) Reset()         { *m = EtcdServerRequest{} }
func (m *EtcdServerRequest) String() string { return proto.CompactTextString(m) }
func (*EtcdServerRequest) ProtoMessage()    {}
func (*EtcdServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0ace618052d3694, []int{0}
}

func (m *EtcdServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EtcdServerRequest.Unmarshal(m, b)
}
func (m *EtcdServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EtcdServerRequest.Marshal(b, m, deterministic)
}
func (m *EtcdServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EtcdServerRequest.Merge(m, src)
}
func (m *EtcdServerRequest) XXX_Size() int {
	return xxx_messageInfo_EtcdServerRequest.Size(m)
}
func (m *EtcdServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EtcdServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EtcdServerRequest proto.InternalMessageInfo

func (m *EtcdServerRequest) GetEtcdServers() []*EtcdServer {
	if m != nil {
		return m.EtcdServers
	}
	return nil
}

func (m *EtcdServerRequest) GetOperationType() common.Operation {
	if m != nil {
		return m.OperationType
	}
	return common.Operation_GET
}

type EtcdServerResponse struct {
	EtcdServers          []*EtcdServer       `protobuf:"bytes,1,rep,name=EtcdServers,proto3" json:"EtcdServers,omitempty"`
	Result               *wrappers.BoolValue `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
	Error                string              `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EtcdServerResponse) Reset()         { *m = EtcdServerResponse{} }
func (m *EtcdServerResponse) String() string { return proto.CompactTextString(m) }
func (*EtcdServerResponse) ProtoMessage()    {}
func (*EtcdServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0ace618052d3694, []int{1}
}

func (m *EtcdServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EtcdServerResponse.Unmarshal(m, b)
}
func (m *EtcdServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EtcdServerResponse.Marshal(b, m, deterministic)
}
func (m *EtcdServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EtcdServerResponse.Merge(m, src)
}
func (m *EtcdServerResponse) XXX_Size() int {
	return xxx_messageInfo_EtcdServerResponse.Size(m)
}
func (m *EtcdServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EtcdServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EtcdServerResponse proto.InternalMessageInfo

func (m *EtcdServerResponse) GetEtcdServers() []*EtcdServer {
	if m != nil {
		return m.EtcdServers
	}
	return nil
}

func (m *EtcdServerResponse) GetResult() *wrappers.BoolValue {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *EtcdServerResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type EtcdServer struct {
	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EtcdClusterName string `protobuf:"bytes,3,opt,name=etcdClusterName,proto3" json:"etcdClusterName,omitempty"`
	LocationName    string `protobuf:"bytes,4,opt,name=locationName,proto3" json:"locationName,omitempty"`
	// fqdn is the fqdn, hostname, or ip address that this EtcdServer will
	// advertise on
	Fqdn string `protobuf:"bytes,5,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	// etcd client port to listen on
	ClientPort           uint32         `protobuf:"varint,6,opt,name=clientPort,proto3" json:"clientPort,omitempty"`
	Status               *common.Status `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EtcdServer) Reset()         { *m = EtcdServer{} }
func (m *EtcdServer) String() string { return proto.CompactTextString(m) }
func (*EtcdServer) ProtoMessage()    {}
func (*EtcdServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0ace618052d3694, []int{2}
}

func (m *EtcdServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EtcdServer.Unmarshal(m, b)
}
func (m *EtcdServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EtcdServer.Marshal(b, m, deterministic)
}
func (m *EtcdServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EtcdServer.Merge(m, src)
}
func (m *EtcdServer) XXX_Size() int {
	return xxx_messageInfo_EtcdServer.Size(m)
}
func (m *EtcdServer) XXX_DiscardUnknown() {
	xxx_messageInfo_EtcdServer.DiscardUnknown(m)
}

var xxx_messageInfo_EtcdServer proto.InternalMessageInfo

func (m *EtcdServer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EtcdServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EtcdServer) GetEtcdClusterName() string {
	if m != nil {
		return m.EtcdClusterName
	}
	return ""
}

func (m *EtcdServer) GetLocationName() string {
	if m != nil {
		return m.LocationName
	}
	return ""
}

func (m *EtcdServer) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

func (m *EtcdServer) GetClientPort() uint32 {
	if m != nil {
		return m.ClientPort
	}
	return 0
}

func (m *EtcdServer) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*EtcdServerRequest)(nil), "moc.cloudagent.etcdserver.EtcdServerRequest")
	proto.RegisterType((*EtcdServerResponse)(nil), "moc.cloudagent.etcdserver.EtcdServerResponse")
	proto.RegisterType((*EtcdServer)(nil), "moc.cloudagent.etcdserver.EtcdServer")
}

func init() { proto.RegisterFile("moc_cloudagent_etcdserver.proto", fileDescriptor_d0ace618052d3694) }

var fileDescriptor_d0ace618052d3694 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x6e, 0xd4, 0x30,
	0x10, 0xc6, 0xc9, 0xb6, 0x0d, 0xea, 0x2c, 0xdd, 0x0a, 0x0b, 0x89, 0xb0, 0x87, 0xb2, 0x0a, 0x42,
	0xca, 0x81, 0x3a, 0x52, 0xe0, 0x05, 0x28, 0xaa, 0x10, 0x17, 0x40, 0x29, 0xe2, 0xc0, 0xa5, 0xca,
	0x3a, 0xb3, 0x21, 0x22, 0xf6, 0xa4, 0xfe, 0x53, 0x04, 0x8f, 0xc1, 0x4b, 0xf0, 0x48, 0xbc, 0x0e,
	0x8a, 0xbd, 0x90, 0x14, 0x09, 0x69, 0x0f, 0x3d, 0x65, 0x32, 0xf3, 0xf3, 0x37, 0x33, 0x9f, 0x0d,
	0x8f, 0x25, 0x89, 0x4b, 0xd1, 0x91, 0xab, 0xab, 0x06, 0x95, 0xbd, 0x44, 0x2b, 0x6a, 0x83, 0xfa,
	0x1a, 0x35, 0xef, 0x35, 0x59, 0x62, 0x8f, 0x24, 0x09, 0x3e, 0x02, 0x7c, 0x04, 0x96, 0x27, 0x0d,
	0x51, 0xd3, 0x61, 0xee, 0xc1, 0xb5, 0xdb, 0xe4, 0x5f, 0x75, 0xd5, 0xf7, 0xa8, 0x4d, 0x38, 0xba,
	0x7c, 0xe8, 0xb5, 0x49, 0x4a, 0x52, 0xdb, 0x4f, 0x28, 0xa4, 0x3f, 0x22, 0xb8, 0x7f, 0x6e, 0x45,
	0x7d, 0xe1, 0x75, 0x4a, 0xbc, 0x72, 0x68, 0x2c, 0x7b, 0x0d, 0xf3, 0x31, 0x69, 0x92, 0x68, 0xb5,
	0x97, 0xcd, 0x8b, 0xa7, 0xfc, 0xbf, 0xfd, 0xf9, 0x44, 0x62, 0x7a, 0x92, 0xbd, 0x80, 0xa3, 0x77,
	0x3d, 0xea, 0xca, 0xb6, 0xa4, 0x3e, 0x7c, 0xeb, 0x31, 0x99, 0xad, 0xa2, 0x6c, 0x51, 0x2c, 0xbc,
	0xd4, 0xdf, 0x4a, 0x79, 0x13, 0x4a, 0x7f, 0x46, 0xc0, 0xa6, 0x43, 0x99, 0x9e, 0x94, 0xc1, 0xdb,
	0x9b, 0xaa, 0x80, 0xb8, 0x44, 0xe3, 0x3a, 0xeb, 0xc7, 0x99, 0x17, 0x4b, 0x1e, 0xec, 0xe3, 0x7f,
	0xec, 0xe3, 0x67, 0x44, 0xdd, 0xc7, 0xaa, 0x73, 0x58, 0x6e, 0x49, 0xf6, 0x00, 0x0e, 0xce, 0xb5,
	0x26, 0x9d, 0xec, 0xad, 0xa2, 0xec, 0xb0, 0x0c, 0x3f, 0xe9, 0xaf, 0x08, 0x60, 0x54, 0x66, 0x0b,
	0x98, 0xb5, 0x75, 0x12, 0x79, 0x62, 0xd6, 0xd6, 0x8c, 0xc1, 0xbe, 0xaa, 0x64, 0xd8, 0xfa, 0xb0,
	0xf4, 0x31, 0xcb, 0xe0, 0x78, 0x18, 0xf1, 0x55, 0xe7, 0x8c, 0x45, 0xfd, 0x76, 0x28, 0x07, 0xc9,
	0x7f, 0xd3, 0x2c, 0x85, 0x7b, 0x1d, 0x09, 0x6f, 0x8b, 0xc7, 0xf6, 0x3d, 0x76, 0x23, 0x37, 0x74,
	0xd8, 0x5c, 0xd5, 0x2a, 0x39, 0x08, 0x1d, 0x86, 0x98, 0x9d, 0x00, 0x88, 0xae, 0x45, 0x65, 0xdf,
	0x93, 0xb6, 0x49, 0xbc, 0x8a, 0xb2, 0xa3, 0x72, 0x92, 0x61, 0x4f, 0x20, 0x36, 0xb6, 0xb2, 0xce,
	0x24, 0x77, 0xfd, 0xfa, 0x73, 0x6f, 0xe1, 0x85, 0x4f, 0x95, 0xdb, 0x52, 0xf1, 0x1d, 0x8e, 0xc7,
	0xc5, 0x5e, 0x0e, 0xce, 0xb2, 0x06, 0xe2, 0x37, 0xea, 0x9a, 0xbe, 0x20, 0x7b, 0xb6, 0x9b, 0xe9,
	0xe1, 0x35, 0x2d, 0x4f, 0x77, 0xa4, 0xc3, 0x35, 0xa7, 0x77, 0xce, 0xf2, 0x4f, 0xa7, 0x4d, 0x6b,
	0x3f, 0xbb, 0x35, 0x17, 0x24, 0x73, 0xd9, 0x0a, 0x4d, 0x86, 0x36, 0x36, 0x97, 0x24, 0x72, 0xdd,
	0x8b, 0x7c, 0x94, 0x0a, 0xe1, 0x3a, 0xf6, 0x17, 0xf7, 0xfc, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0x18, 0x78, 0x9e, 0x43, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EtcdServerAgentClient is the client API for EtcdServerAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EtcdServerAgentClient interface {
	Invoke(ctx context.Context, in *EtcdServerRequest, opts ...grpc.CallOption) (*EtcdServerResponse, error)
}

type etcdServerAgentClient struct {
	cc *grpc.ClientConn
}

func NewEtcdServerAgentClient(cc *grpc.ClientConn) EtcdServerAgentClient {
	return &etcdServerAgentClient{cc}
}

func (c *etcdServerAgentClient) Invoke(ctx context.Context, in *EtcdServerRequest, opts ...grpc.CallOption) (*EtcdServerResponse, error) {
	out := new(EtcdServerResponse)
	err := c.cc.Invoke(ctx, "/moc.cloudagent.etcdserver.EtcdServerAgent/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EtcdServerAgentServer is the server API for EtcdServerAgent service.
type EtcdServerAgentServer interface {
	Invoke(context.Context, *EtcdServerRequest) (*EtcdServerResponse, error)
}

// UnimplementedEtcdServerAgentServer can be embedded to have forward compatible implementations.
type UnimplementedEtcdServerAgentServer struct {
}

func (*UnimplementedEtcdServerAgentServer) Invoke(ctx context.Context, req *EtcdServerRequest) (*EtcdServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invoke not implemented")
}

func RegisterEtcdServerAgentServer(s *grpc.Server, srv EtcdServerAgentServer) {
	s.RegisterService(&_EtcdServerAgent_serviceDesc, srv)
}

func _EtcdServerAgent_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EtcdServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EtcdServerAgentServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.cloudagent.etcdserver.EtcdServerAgent/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EtcdServerAgentServer).Invoke(ctx, req.(*EtcdServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EtcdServerAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "moc.cloudagent.etcdserver.EtcdServerAgent",
	HandlerType: (*EtcdServerAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _EtcdServerAgent_Invoke_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "moc_cloudagent_etcdserver.proto",
}
